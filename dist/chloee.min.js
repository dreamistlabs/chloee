(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["chloee"] = factory();
	else
		root["chloee"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _Chloee = __webpack_require__(1);

var _Chloee2 = _interopRequireDefault(_Chloee);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var chloee = function chloee(color) {
  return new _Chloee2.default(color).convert();
}; /* Chloee - Â© 2017 Johnny Hu */

module.exports = chloee;

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Chloee = function () {
  function Chloee(color) {
    _classCallCheck(this, Chloee);

    var _ref = [color, false, false, {
      "a": 10,
      "b": 11,
      "c": 12,
      "d": 13,
      "e": 14,
      "f": 15
    }];
    this._color = _ref[0];
    this._isRGB = _ref[1];
    this._isHEX = _ref[2];
    this._code = _ref[3];


    this.validateAndIdentify(this._color);
  }

  _createClass(Chloee, [{
    key: "validateAndIdentify",
    value: function validateAndIdentify(color) {
      var RGBRange = '([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])';
      var HEXFormat = new RegExp(/^#*[0-9abcdef]{6}/, 'i');
      var RGBFormat = new RegExp("^(" + RGBRange + "[,s]+){2}" + RGBRange + "{1,3}");

      if (color === undefined) {
        throw new TypeError('Oops! Looks like you forgot to pass in a HEX or RGB value. Chloee requires a valid argument');
      } else if (typeof color !== 'string') {
        throw new TypeError("Argument must be a string. You passed in " + color);
      } else if (!this._color.match(HEXFormat) && !this._color.match(RGBFormat)) {
        throw new Error("Format Error! Argument must be a HEX code (e.g. #c470ee) or RGB value (e.g. 196,112,238). You entered " + color);
      }

      color.match(HEXFormat) ? this._isHEX = true : this._isRGB = true;
    }
  }, {
    key: "convert",
    value: function convert() {
      /* istanbul ignore else */
      if (this._isRGB) {
        return this.convertTo('hex', this._color);
      } else if (this._isHEX) {
        return this.convertTo('rgb', this._color);
      }
    }
  }, {
    key: "convertToLetter",
    value: function convertToLetter(number) {
      for (var key in this._code) {
        if (this._code[key] === number) {
          return key;
        }
      }
    }
  }, {
    key: "convertTo",
    value: function convertTo(type, color) {
      var _this = this;

      var result = [];

      /* istanbul ignore else */
      if (type === 'hex') {
        var converted_rgb = [];
        color.split(',').map(function (char) {
          var value = Number(char);
          converted_rgb.push(Math.floor(value / 16));
          converted_rgb.push(value % 16);
        });

        // console.log(converted_rgb);
        for (var i = 0; i < converted_rgb.length; i++) {

          converted_rgb[i] > 9 ? result.push(this.convertToLetter(converted_rgb[i])) : result.push(converted_rgb[i]);
        }
        return result.join('');
      } else if (type === 'rgb') {
        var converted_hex = color.split('').map(function (char) {
          return char.match(/[abcdef]/i) ? _this._code[char] : Number(char);
        });
        // console.log(converted_hex);

        for (var _i = 0; _i < 6; _i = _i + 2) {
          result.push(converted_hex[_i] * 16 + converted_hex[_i + 1]);
        }
        return result.join(',');
      }
    }
  }]);

  return Chloee;
}();

module.exports = Chloee;

/***/ })
/******/ ]);
});